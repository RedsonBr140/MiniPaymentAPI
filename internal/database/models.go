// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0

package database

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type Funcao string

const (
	FuncaoCOMUM   Funcao = "COMUM"
	FuncaoLOJISTA Funcao = "LOJISTA"
)

func (e *Funcao) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Funcao(s)
	case string:
		*e = Funcao(s)
	default:
		return fmt.Errorf("unsupported scan type for Funcao: %T", src)
	}
	return nil
}

type NullFuncao struct {
	Funcao Funcao
	Valid  bool // Valid is true if Funcao is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullFuncao) Scan(value interface{}) error {
	if value == nil {
		ns.Funcao, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.Funcao.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullFuncao) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.Funcao), nil
}

type User struct {
	UserID    pgtype.UUID
	FirstName string
	LastName  string
	Cpf       string
	Email     string
	UserType  Funcao
}
